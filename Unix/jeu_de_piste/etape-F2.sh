#!/bin/bash

exec 4<&1

# We need bash here to be able to read from 4th fd directly...
# RedHat bug with base64 -d => use -i as a workaround
# https://bugzilla.redhat.com/show_bug.cgi?id=719317
base64 -di <<EOF | exec /bin/bash -s
IyEvYmluL2Jhc2gKCmlmIGxzIC9uby1zdWNoLWZpbGUtZDgxZjcwZjYtM2EzMy0xMWU2LTlmZjYt
MTgwMzczMjk1MWFiIDI+JjEgfCBncmVwIC1xIC1pICdhdWN1biBmaWNoaWVyJwp0aGVuCiAgICBn
ZXR0ZXh0ICJDZSBzY3JpcHQgcmVmdXNlIGRlIHMnZXjDqWN1dGVyIGRhbnMgdW4gZW52aXJvbm5l
bWVudCBjb25maWd1csOpCmVuIGZyYW7Dp2Fpcy4gQ29uZmlndXJleiB2b3RyZSBlbnZpcm9ubmVt
ZW50IGVuIGFuZ2xhaXMgKHZvaXIgbGVzIGRvY3VtZW50YXRpb25zCmZvdXJuaWVzIHBhciBsZXMg
ZW5zZWlnbmFudHMpIGV0IHJlY29tbWFuY2V6LgoKT3VpLCBqZSBzdWlzIHVuIHBldSBkdXIsIGF2
ZWMgdm91cywgbWFpcyBjJ2VzdCB1bmUgYm9ubmUgaGFiaXR1ZGUgcG91cgp1biBpbmZvcm1hdGlj
aWVuIGRlIHRyYXZhaWxsZXIgYXZlYyBkZXMgbG9naWNpZWxzIGVuIGFuZ2xhaXMgZXQgZGUKcydo
YWJpdHVlciDDoCBsaXJlIGxlcyBkb2N1bWVudGF0aW9ucyBlbiBhbmdsYWlzIDogYXV0YW50IHMn
eSBtZXR0cmUKdG91dCBkZSBzdWl0ZSAhCiIKICAgIGV4aXQgMQplbGlmIGxzIC9uby1zdWNoLWZp
bGUtZDgxZjcwZjYtM2EzMy0xMWU2LTlmZjYtMTgwMzczMjk1MWFiIDI+JjEgfCBncmVwIC1xIC1p
ICdubyBzdWNoIGZpbGUnCnRoZW4KICAgIGdldHRleHQgIlBhcmZhaXQsIHZvdHJlIGVudmlyb25u
ZW1lbnQgcGFybGUgYW5nbGFpcywgY29udGludW9ucyAuLi4KIgogICAgZWNobwplbHNlCiAgICBn
ZXR0ZXh0ICJWb3RyZSBlbnZpcm9ubmVtZW50IGVzdCBjb25maWd1csOpIGRhbnMgdW5lIGxhbmd1
ZSBxdWUgamUgbmUgY29ubmFpcwpwYXMsIG91IGJpZW4gaWwgeSBhIHVuIGJ1ZyBkYW5zIGxlIGpl
dSBkZSBwaXN0ZS4gVm9pY2kgbGVzIGluZm9ybWF0aW9ucyBzdXIKbGEgY29uZmlndXJhdGlvbiAo
Y29tbWFuZGUgJ2xvY2FsZScpIDoKIgogICAgbG9jYWxlCiAgICBnZXR0ZXh0ICJBcHB1eWV6IHN1
ciBFbnRyw6llIHBvdXIgY29udGludWVyIgogICAgcmVhZApmaQoKIyBleGVjdXRlICdleGVjIDQ8
JjEnIGJlZm9yZSBleGVjJ2luZyB0aGlzIHNjcmlwdCEKCnJldHJ5ICgpIHsKICAgIGlmIFsgIiQx
IiAhPSAiIiBdOyB0aGVuCgloaW50PSIgKCQxKS4iCiAgICBlbHNlCgloaW50PSIiCiAgICBmaQog
ICAgZWNobyAiTm9uIC4uLiIgIiR7aGludH0iCiAgICBlY2hvICJSZWpvdWUgISI7Cn0KCiMgY2Fu
Y2VsICgpIHsKIyAgICAgZWNobyAiT2sgaidhcnLDqnRlLiBNYWlzIGlsIGZhdWRyYSByZWNvbW1l
bmNlciAhIjsKIyAgICAgZXhpdCAxOwkJCSMgbW91YWlmCiMgfQoKb2sgKCkgewogICAgZWNobyAi
QnJhdm8gISBmaW4gZGUgbCfDqXRhcGUuLi4KCkwnw6l0YXBlIHN1aXZhbnRlIHNlIHRyb3V2ZSBz
dXIgbGUgc2VydmV1ciBkZXBvdHMuZW5zaW1hZy5mci4gRWxsZSBlc3QKZGFucyBsZSBmaWNoaWVy
CgogIC9kZXBvdHMvMjAxNy9qZXUtZGUtcGlzdGUvL2V0YXBlLUcxLnR4dAoKUsOpY3Vww6lyZXot
bGEgdmlhIHNmdHAgKGNmLgpodHRwOi8vZW5zaXdpa2kuZW5zaW1hZy5mci9pbmRleC5waHAvVHJh
dmFpbGxlcl9hX2Rpc3RhbmNlIHBvdXIgMTAwMQpmYcOnb25zIGRlIGZhaXJlIGNlbGEpIHBvdXIg
Y29udGludWVyLiIKICAgIGVjaG8gIgpWb3VzIGRldnJpZXogYXZvaXIgdW4gY29tcHRlIHN1ciBk
ZXBvdHMuZW5zaW1hZy5mciwgbWFpcwp2b3RyZSBtb3QgZGUgcGFzc2Ugbidlc3QgcGFzIGZvcmPD
qW1lbnQgaW5pdGlhbGlzw6kuIFNpIHZvdXMKbidhcnJpdmV6IHBhcyDDoCB2b3VzIGNvbm5lY3Rl
ciwgcsOpLWluaXRpYWxpc2V6IGxlIG1vdCBkZSBwYXNzZQpkZXB1aXMgbGEgcGFnZQoKaHR0cHM6
Ly9pbnRyYW5ldC5lbnNpbWFnLmZyL3Bhc3N3b3Jkcy8KCihWb3VzIGRldnJpZXogYXZvaXIgdW4g
Y29tcHRlIFwiU2VydmV1ciAnZGVwb3RzLmVuc2ltYWcuZnInCihNZXJjdXJpYWwsIEdpdCwgU1ZO
Li4uKVwiIHF1aSBhcHBhcmFpdCBkYW5zIGxhIGxpc3RlLiBTaSBjZQpuJ2VzdCBwYXMgbGUgY2Fz
LCBkZW1hbmRleiDDoCB2b3RyZSBlbnNlaWduYW50KS4iCiAgICBleGl0IDA7Cn0KCnJldHJ5X2Vv
ZiAoKSB7CiAgICByZXRyeSAiY2V0dGUgYWN0aW9uIGVudm9pZSB1biBjYXJhY3RlcmUgZGUgZmlu
IGRlIGZpY2hpZXIgYXUgcHJvY2Vzc3VzIgp9CgpyZXRyeV9pbnQgKCkgewogICAgcmV0cnkgImNl
dHRlIGFjdGlvbiBhdXJhaXQgcHUgdHVlciBsZSBwcm9jZXNzdXMiCn0KCndhaXRfZW9mICgpIHsK
ICAgIG9uZW9mICgpIHsgb2s7IH0KICAgIG9uc3RwICgpIHsgOjsgfQogICAgb25jb250ICgpIHsg
OjsgfQogICAgb25pbnQgKCkgeyByZXRyeV9pbnQ7IH0KICAgIG9ucXVpdCAoKSB7IHJldHJ5OyB9
CiAgICBlY2hvICJPaywgamUgbWUgc3VzcGVuZHMuIFJlbGFuY2UtbW9pIGVuIGF2YW50LXBsYW4g
cG91ciBjb250aW51ZXIuCkEgdG91dCBkZSBzdWl0ZSAuLi4iOwp9Cgp3YWl0X3N0cCAoKSB7CiAg
ICBvbmVvZiAoKSB7IHJldHJ5X2VvZjsgfQogICAgb25zdHAgKCkgewoJd2FpdF9lb2Y7IGtpbGwg
LVNUT1AgJCQ7IAoJZWNobyAiTWUgcmV2b2lsYS4gSidhdHRlbmRzIG1haW50ZW5hbnQgdW4gY2Fy
YWN0ZXJlIGRlIGZpbiBkZSBmaWNoaWVyLgpTaSBsYSBjb21tYW5kZSBhdmFpdCDDqXTDqSBsYW5j
w6llIGF2ZWMgdW5lIGVudHJlZSByZWRpcmlnZWUKKGNvbW1lICcuL2V0YXBlLUYyLnNoIDwgdW4t
ZmljaGllcicgb3UgYmllbiAnY29tbWFuZGUgfCAuL2V0YXBlLUYyLnNoJyksCmxlIGNhcmFjdGVy
ZSBkZSBmaW4gZGUgZmljaGllciBhdXJhaXQgZXRlIHJlY3UgZW4gYXJyaXZhbnQKYSBsYSBmaW4g
ZHUgZmljaGllciBvdSBkZSBsYSBjb21tYW5kZSBkJ2VudHJlZS4gSWNpLCBsJ2VudHJlZSBkZQpl
dGFwZS1GMi5zaCBlc3QgbGUgY2xhdmllci4gT24gcGV1dCBzaW11bGVyIHVuZSBmaW4gZGUgZmlj
aGllciBhdmVjCkNvbnRyb2wtZC4iIDsgfQogICAgb25jb250ICgpIHsgOjsgfQogICAgb25pbnQg
KCkgeyByZXRyeV9pbnQ7IH0KICAgIG9ucXVpdCAoKSB7IHJldHJ5OyB9CiAgICBlY2hvICJTdXNw
ZW5kcyBtb2kuLi4iOwp9CgojIHdhaXRfcXVpdCAoKSB7CiMgICAgIG9uZW9mICgpIHsgcmV0cnk7
IH0KIyAgICAgb25zdHAgKCkgeyA6OyB9CiMgICAgIG9uY29udCAoKSB7IDo7IH0KIyAgICAgb25p
bnQgKCkgeyByZXRyeTsgfQojICAgICBvbnF1aXQgKCkgeyB3YWl0X3N0cDsgfQojICAgICBlY2hv
ICdTSUdRVUlUID8nOwojIH0KCiMgd2FpdF9pbnQgKCkgewojICAgICBvbmVvZiAoKSB7IHJldHJ5
OyB9CiMgICAgIG9uc3RwICgpIHsgcmV0cnk7IH0KIyAgICAgb25jb250ICgpIHsgOjsgfQojICAg
ICBvbmludCAoKSB7IHdhaXRfcXVpdDsgfQojICAgICBvbnF1aXQgKCkgeyByZXRyeTsgfQojICAg
ICBlY2hvICdTSUdJTlQgPyc7CiMgfQoKd2FpdF9zdHA7Cgp0cmFwICdvbmludCcgSU5UOwp0cmFw
ICdvbnN0cCcgVFNUUDsKdHJhcCAnb25jb250JyBDT05UOwp0cmFwICdvbnF1aXQnIFFVSVQ7Cgp3
Z2V0ICJodHRwOi8vd3d3LXZlcmltYWcuaW1hZy5mci9+bW95L21vbml0b3JpbmctamRwL3JlY29y
ZC5waHA/bG9naW49JExPR05BTUUmc3RlcD1GMiIgLU8gL2Rldi9udWxsIDI+L2Rldi9udWxsICYK
CndoaWxlIHRydWU7IGRvCiAgICB3aGlsZSByZWFkIC11IDQgLXIgdmFyOyBkbyA6OyBkb25lOwog
ICAgb25lb2Y7CmRvbmU7Cg==
EOF
