routeur : travaille en couche 3 (couche IP) (gère 3 couches physiques, 3 couches MAC et 1 couche IP)
switch : travaille en couche 2 (couche MAC) et fait de l'unicast (apprentissage en dynamique de quel port il doit envoyer pour rejoindre l'hôte en question) car peut distinguer les couches physiques différentes (avantage : pas de collisions possibles et coûte aussi cher qu'un hub)
hub : travaille en couche 1 seulement (physique) donc il doit envoyer à tous les ports pour rejoindre un hôte en question (avantage : permet d'étudier le traffic / inconvénient : collisions possibles à cause des saturations des liens)

I)
1)
Tattente = temps de traitement
Tpropagation = temps que 1 paquet arrive à destination
Temission = envoi du premier jusqu'au dernier paquet (relatif à la longueur du paquet) (permet de calculer débit avec lequel on communique)
ping de 64 octets : temps min = 0.193/2 ms pour 512 b => 5 Mb/s
ping de 10008 octets : temps min = 0.468/2 ms pour 80064 b => 326 Mb/s
le seul T qui dépend de la longueur du paquet est Temission, donc pour le calculer, on fait la différence entre ces deux essais : Temission = (0.468-0.193)/2=0.1375 pour 10008-64=9944 octets
comparaison avec le débit indiqué par "ethtool enp0s31f6" qui indique 10000Mb/s

2)
udptarget -p <port> : lancement d'un serveur d'écoute UDP dans un port donné (si on veut recevoir de 3 machines simultanément pour le test de débit, on lance sur 3 ports différents)
udpmt <ip_destination> -p <port> : envoi de paquets par UDP à l'adresse donné et au port donné

9)
ping berkeley.edu : 177.200 ms
ping google.fr : 14.093 ms
ping pcserveur.ensimag.fr : 0.499 ms
ping localhost : 0.054 ms
difference car temps de propagation different (à cause de la distance) (et le temps de traitement qui diffère selon le nombre de routeurs mais négligeable)

10)
tc qdisc add dev eth0 root netem delay 1s : augmentation volontaire du délai de 1s
différence lors du ping (ajout de 1000 ms)

NAT > port forwarding > écoute sur port 13000 (celui de UDP par défaut) et envoi à partir de 13000 (guest) : pour permettre à la VM de recevoir les paquets (si on veut le ping, on ping sa machine physique hôte)

